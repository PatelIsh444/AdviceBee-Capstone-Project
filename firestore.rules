rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  
    match /Notification/{document=**} {
      allow read;
      allow write: if request.auth != null;
    }
    
    match /groups/{document=**} {
      allow read;
      allow write: if request.auth != null;
    }
    
    match /reports/{document=**} {
      allow read;
      allow write: if request.auth != null;
    }
    
    match /topics/{document=**} {
      allow read;
      allow write: if request.auth != null;
    }

		match /users/{uid} {
    	allow read;
      allow create: if request.auth.uid != null;
      allow update: if (userIsOwner(uid) && userRankNotChanged()) || userIsAdmin();
      allow delete: if userIsOwner(uid) || userIsAdmin();

      function userRankNotChanged() {
        return ("rank" in existingData()) && ("rank" in incomingData()) && existingData().rank == incomingData().rank;
      }
    }
    
    function getUser() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }

    function userIsOwner(uid) {
      return request.auth.uid == uid;
    }

    function userIsAdmin() {
      return ("rank" in getUser()) && getUser().rank == "Admin";
    }

    function existingData() {
      return resource.data;
    }
    
    function incomingData() {
      return request.resource.data;
    }
  }
}